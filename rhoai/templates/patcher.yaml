{{ if .Values.patcher.dashboard -}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.patcher.name }}
  namespace: {{ .Values.patcher.namespace }}
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "{{ .Values.patcher.syncwave }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.patcher.name }}
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "{{ .Values.patcher.syncwave }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: {{ .Values.patcher.name }}
  namespace: {{ .Values.patcher.namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.patcher.name }}
  namespace: {{ .Values.patcher.namespace }}
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/sync-wave: "{{ .Values.patcher.syncwave }}"
spec:
  backoffLimit: 3
  template:
    spec:
      serviceAccountName: {{ .Values.patcher.name }}
      restartPolicy: Never
      containers:
      - name: oc
        image: {{ .Values.patcher.image }}
        command: ["/bin/bash", "-c"]
        args:
        - |
          oc scale deployment rhods-dashboard --replicas={{ .Values.patcher.dashboard.replicas }} -n {{ .Values.patcher.namespace }}
          oc rollout status deployment/rhods-dashboard -n {{ .Values.patcher.namespace }} --watch=true
{{end}}
